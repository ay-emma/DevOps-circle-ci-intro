# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
command: 
  print_pipline_id: 
    description: "A command to print the circleci workflow id"
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}

jobs:
  print-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "print hello"
          command: "echo Hello !"

  print-world:
    docker:
      - image: cimg/base:stable

    steps:
      - checkout
      - run:
          name: "print world"
          command: "echo World !"
  print-ayo:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo $MY_NAME ayoyinka

  cache-workspace-data:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: "cache data using workspace"
          command: echo "hello world from another workspace" > ~/output.txt
      - persist_to_workspace:
          root: ~/
          paths: 
            - output.txt
  
  another-workspace-data:
    docker: 
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: ~/
      - run: 
          name: "print data form another workspace"
          command: cat ~/output.txt 
  
  command-job:
    docker:
      - image: cimg/base:stable
    steps:
      - print_pipline_id

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - print-hello
      - print-world:
          requires:
            - print-hello
      - print-ayo:
          requires: 
            - print-world
      - cache-workspace-data
      - another-workspace-data:
          requires: 
            - cache-workspace-data
      - command-job

